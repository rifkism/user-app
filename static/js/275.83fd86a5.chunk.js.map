{"version":3,"file":"static/js/275.83fd86a5.chunk.js","mappings":"4JAaMA,EAAcC,EAAAA,GAAAA,MAAH,yIAwCjB,UA7B8B,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cAoBnDC,EAAY,CAAEF,OAAAA,EAAQC,cAAAA,GAE5B,OACE,SAAC,IAAD,CAAeE,MAAO,CAAEC,aArBL,SAACC,EAAeC,GACnC,IAAIC,EAAW,GAEO,YAAlBN,GAAiD,KAAlBA,EACjCM,EAAW,MACgB,QAAlBN,EACTM,EAAW,OACgB,SAAlBN,IACTM,EAAW,WAGRD,IACHC,EAAW,WAGbR,EAAOM,EAAOE,IAMwBL,UAAAA,GAAtC,UACE,SAACN,EAAD,UAAcE","sources":["components/Table/Table.tsx"],"sourcesContent":["import { FC, ReactNode, useState } from 'react'\nimport styled from 'styled-components'\nimport { TableProvider } from './useTableContext'\n\ninterface ToggleState {\n  sortBy: string\n  sortDirection: string\n}\ninterface TableProps extends ToggleState {\n  children: ReactNode\n  onSort: (sortBy: string, sortDirection: string) => void\n}\n\nconst StyledTable = styled.table`\n  padding: 128px 16px 0;\n\n  th,\n  td {\n    padding: 8px;\n    text-align: left;\n    min-width: 200px;\n  }\n`\n\nconst Table: FC<TableProps> = ({ children, onSort, sortBy, sortDirection }) => {\n  /* istanbul ignore next */\n  const onToggleSort = (field: string, isSameColumn: boolean) => {\n    let nextSort = ''\n\n    if (sortDirection === 'default' || sortDirection === '') {\n      nextSort = 'asc'\n    } else if (sortDirection === 'asc') {\n      nextSort = 'desc'\n    } else if (sortDirection === 'desc') {\n      nextSort = 'default'\n    }\n\n    if (!isSameColumn) {\n      nextSort = 'default'\n    }\n\n    onSort(field, nextSort)\n  }\n\n  const sortState = { sortBy, sortDirection }\n\n  return (\n    <TableProvider value={{ onToggleSort, sortState }}>\n      <StyledTable>{children}</StyledTable>\n    </TableProvider>\n  )\n}\n\nexport default Table\n"],"names":["StyledTable","styled","children","onSort","sortBy","sortDirection","sortState","value","onToggleSort","field","isSameColumn","nextSort"],"sourceRoot":""}